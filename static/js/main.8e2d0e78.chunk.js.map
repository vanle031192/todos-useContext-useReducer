{"version":3,"sources":["hooks/useToggleState.js","hooks/useInputState.js","reducers/todo.reducer.js","context/todos.context.js","hooks/useLocalStorageReducer.js","EditTodoForm.js","Todo.js","TodoList.js","TodoForm.js","TodoApp.js","App.js","serviceWorker.js","index.js"],"names":["useToggle","initialVal","arguments","length","undefined","_useState","useState","_useState2","Object","slicedToArray","state","setState","useInputState","value","setValue","e","target","reducer","action","type","concat","toConsumableArray","id","uuid","task","completed","filter","todo","map","objectSpread","newTask","defaultTodos","TodosContext","createContext","DispatchContext","TodosProvider","props","_useLocalStorageReduc","key","defaultVal","_useReducer","useReducer","JSON","parse","window","localStorage","getItem","String","_useReducer2","dispatch","useEffect","setItem","stringify","useLocalStorageReducer","todoReducer","_useLocalStorageReduc2","todos","react_default","a","createElement","Provider","children","EditTodoForm","_ref","toggleEditForm","useContext","_useInputState","_useInputState2","handleChange","reset","console","log","onSubmit","preventDefault","style","marginLeft","width","TextField_default","margin","onChange","fullWidth","autoFocus","memo","_useToggleState","useToggleState","_useToggleState2","isEditing","toggle","ListItem_default","height","src_EditTodoForm","Fragment","Checkbox_default","tabIndex","checked","onClick","textDecoration","ListItemSecondaryAction_default","IconButton_default","aria-label","Delete_default","Edit_default","TodoList","Paper_default","List_default","i","src_Todo","assign","Divider_default","TodoForm","padding","label","TodoApp","backgroundColor","elevation","AppBar_default","color","position","Toolbar_default","Typography_default","Grid_default","container","justify","marginTop","item","xs","md","lg","src_TodoForm","src_TodoList","App","src_TodoApp","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8e2d0e78.chunk.js","sourcesContent":["import { useState } from \"react\";\nfunction useToggle(initialVal = false) {\n  // call useState, \"reserve piece of state\"\n  const [state, setState] = useState(initialVal);\n  const toggle = () => {\n    setState(!state);\n  };\n  // return piece of state AND a function to toggle it\n  return [state, toggle];\n}\nexport default useToggle;\n","import { useState } from \"react\";\nexport default initialVal => {\n  const [value, setValue] = useState(initialVal);\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n  const reset = () => {\n    setValue(\"\");\n  };\n  return [value, handleChange, reset];\n};\n","import uuid from \"uuid/v4\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      return [...state, { id: uuid(), task: action.task, completed: false }];\n    case \"REMOVE\":\n      return state.filter(todo => todo.id !== action.id);\n    case \"TOGGLE\":\n      return state.map(todo =>\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n      );\n    case \"EDIT\":\n      return state.map(todo =>\n        todo.id === action.id ? { ...todo, task: action.newTask } : todo\n      );\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","import React, { createContext } from \"react\";\nimport { useLocalStorageReducer } from \"../hooks/useLocalStorageReducer\";\nimport todoReducer from \"../reducers/todo.reducer.js\";\nconst defaultTodos = [\n  { id: 1, task: \"Mow the lawn using goats\", completed: false },\n  { id: 2, task: \"Release lady bugs into garden\", completed: true }\n];\nexport const TodosContext = createContext();\nexport const DispatchContext = createContext();\n\nexport function TodosProvider(props) {\n  const [todos, dispatch] = useLocalStorageReducer(\n    \"todos\",\n    defaultTodos,\n    todoReducer\n  );\n  return (\n    <TodosContext.Provider value={todos}>\n      <DispatchContext.Provider value={dispatch}>\n        {props.children}\n      </DispatchContext.Provider>\n    </TodosContext.Provider>\n  );\n}\n","import { useReducer, useEffect } from \"react\";\nfunction useLocalStorageReducer(key, defaultVal, reducer) {\n  const [state, dispatch] = useReducer(reducer, defaultVal, () => {\n    let value;\n    try {\n      value = JSON.parse(\n        window.localStorage.getItem(key) || String(defaultVal)\n      );\n    } catch (e) {\n      value = defaultVal;\n    }\n    return value;\n  });\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [state]);\n\n  return [state, dispatch];\n}\nexport { useLocalStorageReducer };\n","import React, { useContext } from \"react\";\nimport useInputState from \"./hooks/useInputState\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { DispatchContext } from \"./context/todos.context\";\n\nfunction EditTodoForm({ id, task, toggleEditForm }) {\n  const dispatch = useContext(DispatchContext);\n  const [value, handleChange, reset] = useInputState(task);\n  console.log(\"EDIT FORM RE-RENDER\");\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n        dispatch({ type: \"EDIT\", id: id, newTask: value });\n        reset();\n        toggleEditForm();\n      }}\n      style={{ marginLeft: \"1rem\", width: \"50%\" }}\n    >\n      <TextField\n        margin='normal'\n        value={value}\n        onChange={handleChange}\n        fullWidth\n        autoFocus\n      />\n    </form>\n  );\n}\nexport default EditTodoForm;\n","import React, { useContext, memo } from \"react\";\nimport useToggleState from \"./hooks/useToggleState\";\nimport EditTodoForm from \"./EditTodoForm\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItem\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport { DispatchContext } from \"./context/todos.context\";\n\nfunction Todo({ id, task, completed }) {\n  const dispatch = useContext(DispatchContext);\n  const [isEditing, toggle] = useToggleState(false);\n  return (\n    <ListItem style={{ height: \"64px\" }}>\n      {isEditing ? (\n        <EditTodoForm id={id} task={task} toggleEditForm={toggle} />\n      ) : (\n        <>\n          <Checkbox\n            tabIndex={-1}\n            checked={completed}\n            onClick={() => dispatch({ type: \"TOGGLE\", id: id })}\n          />\n          <ListItemText\n            style={{ textDecoration: completed ? \"line-through\" : \"none\" }}\n          >\n            {task}\n          </ListItemText>\n          <ListItemSecondaryAction>\n            <IconButton\n              aria-label='Delete'\n              onClick={() => dispatch({ type: \"REMOVE\", id: id })}\n            >\n              <DeleteIcon />\n            </IconButton>\n            <IconButton aria-label='Edit' onClick={toggle}>\n              <EditIcon />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </>\n      )}\n    </ListItem>\n  );\n}\n\nexport default memo(Todo);\n","import React, { useContext } from \"react\";\nimport Todo from \"./Todo\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { TodosContext } from \"./context/todos.context\";\n\nfunction TodoList() {\n  const todos = useContext(TodosContext);\n  if (todos.length)\n    return (\n      <Paper>\n        <List>\n          {todos.map((todo, i) => (\n            // To add a key to a fragment, we have to use the long-hand version\n            // rather than <> </>, we have to use <React.Fragment>\n            <React.Fragment key={i}>\n              <Todo {...todo} key={todo.id} />\n              {i < todos.length - 1 && <Divider />}\n            </React.Fragment>\n          ))}\n        </List>\n      </Paper>\n    );\n  return null;\n}\nexport default TodoList;\n","import React, { useContext } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useInputState from \"./hooks/useInputState\";\nimport { DispatchContext } from \"./context/todos.context\";\nfunction TodoForm() {\n  const [value, handleChange, reset] = useInputState(\"\");\n  const dispatch = useContext(DispatchContext);\n  return (\n    <Paper style={{ margin: \"1rem 0\", padding: \"0 1rem\" }}>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          dispatch({ type: \"ADD\", task: value });\n          reset();\n        }}\n      >\n        <TextField\n          value={value}\n          onChange={handleChange}\n          margin='normal'\n          label='Add New Todo'\n          fullWidth\n        />\n      </form>\n    </Paper>\n  );\n}\nexport default TodoForm;\n","import React from \"react\";\nimport TodoList from \"./TodoList\";\nimport TodoForm from \"./TodoForm\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { TodosProvider } from \"./context/todos.context\";\n\nfunction TodoApp() {\n  return (\n    <Paper\n      style={{\n        padding: 0,\n        margin: 0,\n        height: \"100vh\",\n        backgroundColor: \"#fafafa\"\n      }}\n      elevation={0}\n    >\n      <AppBar color='primary' position='static' style={{ height: \"64px\" }}>\n        <Toolbar>\n          <Typography color='inherit'>TODOS WITH HOOKS</Typography>\n        </Toolbar>\n      </AppBar>\n      <Grid container justify='center' style={{ marginTop: \"1rem\" }}>\n        <Grid item xs={11} md={8} lg={4}>\n          <TodosProvider>\n            <TodoForm />\n            <TodoList />\n          </TodosProvider>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\nexport default TodoApp;\n","import React from \"react\";\nimport TodoApp from \"./TodoApp\";\n\nfunction App() {\n  return <TodoApp />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}